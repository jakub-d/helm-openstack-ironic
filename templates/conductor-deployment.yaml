apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openstackIronicStandalone.conductor.fullname" . }}
  labels:
    app: {{ include "openstackIronicStandalone.name" . }}
    chart: {{ include "openstackIronicStandalone.chart" . }}
    component: {{ .Values.conductor.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.conductor.replicas }}
  selector:
    matchLabels:
      app: {{ include "openstackIronicStandalone.name" . }}
      component: {{ .Values.conductor.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "openstackIronicStandalone.name" . }}
        component: {{ .Values.conductor.name }}
        release: {{ .Release.Name }}
      name: {{ include "openstackIronicStandalone.conductor.fullname" . }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
    spec:
      hostNetwork: {{ .Values.conductor.hostNetwork }}
      {{- if .Values.conductor.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
        - name: {{ include "openstackIronicStandalone.conductor.fullname" . }}
          image: "{{ .Values.image.name }}:{{ .Values.image.version }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          securityContext:
            privileged: {{ .Values.conductor.privileged }}
        {{- with .Values.conductor.resources }}
          resources:
{{ toYaml . | indent 12 }}
        {{- end }}
          command:
            - /bin/sh
          args:
            - -c
            - mako-render /etc/ironic/ironic.conf.mako >/tmp/ironic.conf; /usr/bin/ironic-conductor --config-file /tmp/ironic.conf
          env:
            - name: IRONIC_URL
              value: "{{ include "openstackIronicStandalone.api.fullname" . }}:{{ .Values.api.portExternal }}/"
            {{- if .Values.rabbitmq.enabled }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq
                  key: rabbitmq-password
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq
                  key: rabbitmq-erlang-cookie
            {{- end }}
            {{- if .Values.mariadb.enabled }}
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb
                  {{- if .Values.mariadb.db.user }}
                  key: mariadb-password
                  {{- else }}
                  key: mariadb-root-password
                  {{- end }}
            {{- end }}
#          livenessProbe:
#            exec:
#              command:
#                - /bin/bash
#                - -c
#                - ironic driver-list | grep "$HOSTNAME"
#            initialDelaySeconds: 30
#            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /storage
              name: ironic
            - mountPath: /etc/ironic
              name: ironic-etc
              readOnly: true
            {{- if .Values.conductor.privileged }}
            - mountPath: /sys
              name: host-sys
            - mountPath: /dev
              name: host-dev
            - mountPath: /lib/modules
              name: host-lib-modules
              readOnly: True
            {{- end }}
      initContainers:
        - name: storage-dir-permissions
          image: "{{ .Values.image.name }}:{{ .Values.image.version }}"
          command: ["/bin/bash"]
          args: ["-c", "chown -R ironic:ironic /storage/httpboot /storage/tftpboot /storage/mgmt-scripts; chmod 1777 /storage/*; chown 1001 /mnt/mariadb"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /storage/httpboot
              name: ironic
              subPath: httpboot
            - mountPath: /storage/tftpboot
              name: ironic
              subPath: tftpboot
            - mountPath: /storage/mgmt-scripts
              name: ironic
              subPath: mgmt-scripts
            - mountPath: /mnt/mariadb
              name: ironic
              subPath: "{{ .Values.mariadb.master.persistence.subPath }}"
        - name: wait-for-mariadb
          image: "{{ .Values.image.name }}:{{ .Values.image.version }}"
          command:
            - /bin/sh
          args:
            - -c
            - /tmp/wait-for-mariadb.sh
          env:
            - name: DB_NAME
              value: "{{ .Release.Name }}-mariadb"
            - name: DB_USER
              value: "{{ default "root" .Values.mariadb.db.user }}"
            {{- if .Values.mariadb.enabled }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb
                  {{- if .Values.mariadb.db.user }}
                  key: mariadb-password
                  {{- else }}
                  key: mariadb-root-password
                  {{- end }}
            {{- end }}
          volumeMounts:
            - mountPath: /tmp/wait-for-mariadb.sh
              name: ironic-scripts
              subPath: wait-for-mariadb.sh
              readOnly: true
        - name: update-database-schema
          image: "{{ .Values.image.name }}:{{ .Values.image.version }}"
          command:
            - /bin/sh
          args:
            - -c
            - mako-render /etc/ironic/ironic.conf.mako >/tmp/ironic.conf; /usr/bin/ironic-dbsync --config-file /tmp/ironic.conf upgrade
          env:
            - name: API_PORT_INTERNAL
              value: {{ .Values.api.portInternal | quote }}
            {{- if .Values.rabbitmq.enabled }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq
                  key: rabbitmq-password
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq
                  key: rabbitmq-erlang-cookie
            {{- end }}
            {{- if .Values.mariadb.enabled }}
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb
                  {{- if .Values.mariadb.db.user }}
                  key: mariadb-password
                  {{- else }}
                  key: mariadb-root-password
                  {{- end }}
            {{- end }}
          volumeMounts:
            - mountPath: /etc/ironic
              name: ironic-etc
              readOnly: true
      volumes:
        - name: ironic-etc
          configMap:
            name: {{ include "openstackIronicStandalone.name" . }}-etc
            defaultMode: 0644
        - name: ironic-scripts
          configMap:
            name: {{ include "openstackIronicStandalone.name" . }}-scripts
            defaultMode: 0755
        - name: ironic
          persistentVolumeClaim:
            {{- if .Values.persistentVolumeClaimName }}
            claimName: {{ .Values.persistentVolumeClaimName | quote }}
            {{- else }}
            claimName: {{ ( include "openstackIronicStandalone.tftp.fullname" . ) | quote }}
            {{- end }}
        {{- if .Values.conductor.privileged }}
        - name: host-dev
          hostPath:
            path: /dev
          type: Directory
          readOnly: false
        - name: host-lib-modules
          hostPath:
            path: /lib/modules
        - name: host-sys
          hostPath:
            path: /sys
        {{- end }}
